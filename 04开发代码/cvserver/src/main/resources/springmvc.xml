<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

		
	
	
	
	<!-- 通过component-scan 让Spring扫描base-package下的所有的类（包含子包），让Spring的注解生效 -->
	<context:component-scan
		base-package="com.hhx7.cvserver">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	
	<!-- 用于支持SpringMVC中的注解 -->
	<mvc:annotation-driven>
		<mvc:message-converters
			register-defaults="true">
			<!--使用fastjson作为json解析器 -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes"
					value="application/json" />
				<!--设置fastjson特性 -->
				<property name="features">
					<array>
						<!--设置null值也要输出，fastjson默认是关闭的 -->
						<value>WriteMapNullValue</value>
						<!--设置使用文本方式输出日期，fastjson默认是long -->
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!--&lt;!&ndash; 视图控制器映射 &ndash;&gt;-->
	<!--<mvc:view-controller path="/"-->
		<!--view-name="/home/" />-->
	<!-- 配置静态资源，直接映射到对应的文件夹，这里是/resources/，不被DispatcherServlet处理 -->
	<!--<mvc:resources mapping="/resources/**"
		location="/resources/" />-->
	<mvc:resources mapping="/css/**" location="/statics/css/"/>
	<mvc:resources mapping="/js/**" location="/statics/js/"/>
	<mvc:resources mapping="/image/**" location="/statics/image/"/>
	<!-- 默认视图解析器 -->
	<mvc:default-servlet-handler />
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<!-- <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	 -->
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/views/" p:suffix=".jsp">
	</bean>
	

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
	</bean>
	
	<mvc:cors>
    	<mvc:mapping path="/**" />
	</mvc:cors>

</beans>
